{"version":3,"file":"component---src-templates-using-dsg-js-11c7f526f788c39dc47f.js","mappings":"4VACWA,EAAO,6BAEPC,EAAS,+BACTC,EAAU,gCACVC,EAAU,gCACVC,EAAU,gCACVC,EAAU,gCACVC,EAAQ,8BCRnB,EAAe,IAA0B,sDCoCzC,MA7Be,IAEb,0BAAQC,UAAWC,GACjB,sBAAID,UAAWC,GACb,uBAAKC,GAAID,EAAsBE,IAAKC,EAAQC,KAAG,KAEjD,sBAAIL,UAAWC,GACb,0BACE,gBAAC,EAAAK,KAAI,CAACC,GAAG,WAAWP,UAAWC,GAAsB,YAEvD,0BACE,gBAAC,EAAAK,KAAI,CAACC,GAAG,iDAAiDP,UAAWC,EAAAA,MAAoBO,OAAO,UAAS,UAE3G,0BACE,gBAAC,EAAAF,KAAI,CAACC,GAAG,QAAQP,UAAWC,GAAmB,SAEjD,0BACE,gBAAC,EAAAK,KAAI,CAACC,GAAG,SAASP,UAAWC,EAAAA,OAAoB,UAEnD,0BACE,gBAAC,EAAAK,KAAI,CAACC,GAAG,QAAQP,UAAWC,EAAAA,MAAmB,SAEjD,0BACE,gBAAC,EAAAK,KAAI,CAACC,GAAG,WAAWP,UAAWC,GAAsB,a,yDCoB7D,IArCe,IAAmB,IAAD,MAAjB,SAAEQ,GAAU,EAC1B,MAAMhB,GAAOiB,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,IAAM,CAACC,WAAiC,QAAtB,EAAAlB,EAAKmB,KAAKC,oBAAY,aAAtB,EAAwBd,QAAK,UAChD,uBACEe,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,4BAAOR,GACP,0BACEK,MAAO,CACLI,UAAU,iBACVC,SAAS,mBAEZ,MACI,IAAIC,MAAOC,cAAc,gBAC5B,IACA,qBAAGC,KAAK,4BAA2B,YAGtC,C,+CCFP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAExB,EAAK,SAAEU,GAAU,EAC3C,MAAM,KAAEG,IAASF,EAAAA,EAAAA,gBAAe,YAc1Bc,EAAkBD,GAAeX,EAAKC,aAAaU,YACnDE,EAAgC,QAApB,EAAGb,EAAKC,oBAAY,aAAjB,EAAmBd,MAExC,OACE,gCACE,6BAAQ0B,EAAkB1B,EAAK,MAAM0B,EAAiB1B,GACtD,wBAAM2B,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAAS5B,IACnC,wBAAM6B,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAf,EAAKC,oBAAY,aAAjB,EAAmBgB,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAAS5B,IACpC,wBAAM2B,KAAK,sBAAsBC,QAASH,IACzCf,EAGP,C,6GCpCA,MAiBaqB,EAAO,IAAM,gBAAC,IAAG,CAAC/B,MAAM,cAErC,UAnBiB,IACf,gBAAC,IAAM,KACL,0BAAI,gBACW,yBAAG,aAElB,yBAAG,uDACH,yBAAG,kCAC+B,IAChC,qBAAGuB,KAAK,yFAAwF,kDAE5F,KAGN,gBAAC,EAAAhB,KAAI,CAACC,GAAG,KAAI,2B","sources":["webpack://d2pd3/./src/components/header.module.css","webpack://d2pd3/./src/images/ct-logo.png","webpack://d2pd3/./src/components/header.js","webpack://d2pd3/./src/components/layout.js","webpack://d2pd3/./src/components/seo.js","webpack://d2pd3/./src/templates/using-dsg.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var data = \"header-module--data--064b9\";\nexport var faq = \"header-module--faq--cb969\";\nexport var header = \"header-module--header--666b3\";\nexport var navList = \"header-module--navList--0129c\";\nexport var orgLogo = \"header-module--orgLogo--88fe7\";\nexport var project = \"header-module--project--713e9\";\nexport var support = \"header-module--support--233aa\";\nexport var title = \"header-module--title--de67b\";","export default __webpack_public_path__ + \"static/ct-logo-37c29b996e3bc1219439c24571581a5f.png\";","import React from 'react';\nimport { Link } from 'gatsby';  // Gatsby's Link component for internal navigation\nimport { Script } from 'gatsby';\nimport * as headerStyles from './header.module.css';  // CSS Module for styling\n\nimport ctLogo from \"../images/ct-logo.png\"\n\nconst Header = () => (\n  \n  <header className={headerStyles.header}>\n    <h1 className={headerStyles.title}>\n      <img id={headerStyles.orgLogo} src={ctLogo} alt/>\n    </h1>\n    <ul className={headerStyles.navList}>\n      <li>\n        <Link to=\"#project\" className={headerStyles.project}>PROJECT</Link>\n      </li>\n      <li>\n        <Link to=\"https://dl.acm.org/doi/10.1145/3593013.3594020\" className={headerStyles.paper} target=\"_blank\">PAPER</Link>\n      </li>\n      <li>\n        <Link to=\"#data\" className={headerStyles.data}>DATA</Link>\n      </li>\n      <li>\n        <Link to=\"#press\" className={headerStyles.press}>PRESS</Link>\n      </li>\n      <li>\n        <Link to=\"#team\" className={headerStyles.team}>TEAM</Link>\n      </li>\n      <li>\n        <Link to=\"#support\" className={headerStyles.support}>SUPPORT</Link>\n      </li>\n    </ul>\n  </header>\n);\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingDSG = () => (\n  <Layout>\n    <h1>\n      Hello from a <b>DSG Page</b>\n    </h1>\n    <p>This page is not created until requested by a user.</p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/deferred-static-generation/\">\n        documentation about Deferred Static Generation\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"Using DSG\" />\n\nexport default UsingDSG\n"],"names":["data","header","navList","orgLogo","project","support","title","className","headerStyles","id","src","ctLogo","alt","Link","to","target","children","useStaticQuery","siteTitle","site","siteMetadata","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","href","description","metaDescription","defaultTitle","name","content","property","author","Head"],"sourceRoot":""}